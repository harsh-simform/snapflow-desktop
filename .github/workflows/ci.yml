name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node-version: [20.x]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run type-check

      - name: Run format check
        run: npm run format:check

      - name: Build application
        run: npm run build
        env:
          SKIP_NOTARIZATION: true

  build-test:
    runs-on: macos-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build and package
        run: npm run build
        env:
          SKIP_NOTARIZATION: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-test-${{ github.sha }}
          path: |
            dist/*.dmg
            dist/*.zip
          retention-days: 7
